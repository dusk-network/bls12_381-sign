// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.
//
// Copyright (c) DUSK NETWORK. All rights reserved.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.14.0
// source: bls12381sig.proto

package bls

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Error int32

const (
	Error_BLS_INVALID_BYTES       Error = 0
	Error_BLS_VERIFICATION_FAILED Error = 1
	Error_UNKNOWN                 Error = 2
)

// Enum value maps for Error.
var (
	Error_name = map[int32]string{
		0: "BLS_INVALID_BYTES",
		1: "BLS_VERIFICATION_FAILED",
		2: "UNKNOWN",
	}
	Error_value = map[string]int32{
		"BLS_INVALID_BYTES":       0,
		"BLS_VERIFICATION_FAILED": 1,
		"UNKNOWN":                 2,
	}
)

func (x Error) Enum() *Error {
	p := new(Error)
	*p = x
	return p
}

func (x Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Error) Descriptor() protoreflect.EnumDescriptor {
	return file_bls12381sig_proto_enumTypes[0].Descriptor()
}

func (Error) Type() protoreflect.EnumType {
	return &file_bls12381sig_proto_enumTypes[0]
}

func (x Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Error.Descriptor instead.
func (Error) EnumDescriptor() ([]byte, []int) {
	return file_bls12381sig_proto_rawDescGZIP(), []int{0}
}

type GenerateKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenerateKeysRequest) Reset() {
	*x = GenerateKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bls12381sig_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateKeysRequest) ProtoMessage() {}

func (x *GenerateKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bls12381sig_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateKeysRequest.ProtoReflect.Descriptor instead.
func (*GenerateKeysRequest) Descriptor() ([]byte, []int) {
	return file_bls12381sig_proto_rawDescGZIP(), []int{0}
}

type GenerateKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecretKey []byte `protobuf:"bytes,1,opt,name=SecretKey,proto3" json:"SecretKey,omitempty"`
	PublicKey []byte `protobuf:"bytes,2,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
}

func (x *GenerateKeysResponse) Reset() {
	*x = GenerateKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bls12381sig_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateKeysResponse) ProtoMessage() {}

func (x *GenerateKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bls12381sig_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateKeysResponse.ProtoReflect.Descriptor instead.
func (*GenerateKeysResponse) Descriptor() ([]byte, []int) {
	return file_bls12381sig_proto_rawDescGZIP(), []int{1}
}

func (x *GenerateKeysResponse) GetSecretKey() []byte {
	if x != nil {
		return x.SecretKey
	}
	return nil
}

func (x *GenerateKeysResponse) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type SignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecretKey []byte `protobuf:"bytes,1,opt,name=SecretKey,proto3" json:"SecretKey,omitempty"`
	PublicKey []byte `protobuf:"bytes,2,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	Message   []byte `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *SignRequest) Reset() {
	*x = SignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bls12381sig_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRequest) ProtoMessage() {}

func (x *SignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bls12381sig_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRequest.ProtoReflect.Descriptor instead.
func (*SignRequest) Descriptor() ([]byte, []int) {
	return file_bls12381sig_proto_rawDescGZIP(), []int{2}
}

func (x *SignRequest) GetSecretKey() []byte {
	if x != nil {
		return x.SecretKey
	}
	return nil
}

func (x *SignRequest) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *SignRequest) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

type SignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Sig:
	//	*SignResponse_Signature
	//	*SignResponse_Error
	Sig isSignResponse_Sig `protobuf_oneof:"sig"`
}

func (x *SignResponse) Reset() {
	*x = SignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bls12381sig_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignResponse) ProtoMessage() {}

func (x *SignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bls12381sig_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignResponse.ProtoReflect.Descriptor instead.
func (*SignResponse) Descriptor() ([]byte, []int) {
	return file_bls12381sig_proto_rawDescGZIP(), []int{3}
}

func (m *SignResponse) GetSig() isSignResponse_Sig {
	if m != nil {
		return m.Sig
	}
	return nil
}

func (x *SignResponse) GetSignature() []byte {
	if x, ok := x.GetSig().(*SignResponse_Signature); ok {
		return x.Signature
	}
	return nil
}

func (x *SignResponse) GetError() Error {
	if x, ok := x.GetSig().(*SignResponse_Error); ok {
		return x.Error
	}
	return Error_BLS_INVALID_BYTES
}

type isSignResponse_Sig interface {
	isSignResponse_Sig()
}

type SignResponse_Signature struct {
	Signature []byte `protobuf:"bytes,1,opt,name=Signature,proto3,oneof"`
}

type SignResponse_Error struct {
	Error Error `protobuf:"varint,2,opt,name=Error,proto3,enum=signer.Error,oneof"`
}

func (*SignResponse_Signature) isSignResponse_Sig() {}

func (*SignResponse_Error) isSignResponse_Sig() {}

type VerifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apk       []byte `protobuf:"bytes,1,opt,name=Apk,proto3" json:"Apk,omitempty"`
	Signature []byte `protobuf:"bytes,2,opt,name=Signature,proto3" json:"Signature,omitempty"`
	Message   []byte `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *VerifyRequest) Reset() {
	*x = VerifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bls12381sig_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyRequest) ProtoMessage() {}

func (x *VerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bls12381sig_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyRequest.ProtoReflect.Descriptor instead.
func (*VerifyRequest) Descriptor() ([]byte, []int) {
	return file_bls12381sig_proto_rawDescGZIP(), []int{4}
}

func (x *VerifyRequest) GetApk() []byte {
	if x != nil {
		return x.Apk
	}
	return nil
}

func (x *VerifyRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *VerifyRequest) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

type VerifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Ver:
	//	*VerifyResponse_Valid
	//	*VerifyResponse_Error
	Ver isVerifyResponse_Ver `protobuf_oneof:"ver"`
}

func (x *VerifyResponse) Reset() {
	*x = VerifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bls12381sig_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyResponse) ProtoMessage() {}

func (x *VerifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bls12381sig_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyResponse.ProtoReflect.Descriptor instead.
func (*VerifyResponse) Descriptor() ([]byte, []int) {
	return file_bls12381sig_proto_rawDescGZIP(), []int{5}
}

func (m *VerifyResponse) GetVer() isVerifyResponse_Ver {
	if m != nil {
		return m.Ver
	}
	return nil
}

func (x *VerifyResponse) GetValid() bool {
	if x, ok := x.GetVer().(*VerifyResponse_Valid); ok {
		return x.Valid
	}
	return false
}

func (x *VerifyResponse) GetError() Error {
	if x, ok := x.GetVer().(*VerifyResponse_Error); ok {
		return x.Error
	}
	return Error_BLS_INVALID_BYTES
}

type isVerifyResponse_Ver interface {
	isVerifyResponse_Ver()
}

type VerifyResponse_Valid struct {
	Valid bool `protobuf:"varint,1,opt,name=Valid,proto3,oneof"`
}

type VerifyResponse_Error struct {
	Error Error `protobuf:"varint,2,opt,name=Error,proto3,enum=signer.Error,oneof"`
}

func (*VerifyResponse_Valid) isVerifyResponse_Ver() {}

func (*VerifyResponse_Error) isVerifyResponse_Ver() {}

type CreateAPKRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey []byte `protobuf:"bytes,1,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
}

func (x *CreateAPKRequest) Reset() {
	*x = CreateAPKRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bls12381sig_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAPKRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAPKRequest) ProtoMessage() {}

func (x *CreateAPKRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bls12381sig_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAPKRequest.ProtoReflect.Descriptor instead.
func (*CreateAPKRequest) Descriptor() ([]byte, []int) {
	return file_bls12381sig_proto_rawDescGZIP(), []int{6}
}

func (x *CreateAPKRequest) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type CreateAPKResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Apk:
	//	*CreateAPKResponse_APK
	//	*CreateAPKResponse_Error
	Apk isCreateAPKResponse_Apk `protobuf_oneof:"apk"`
}

func (x *CreateAPKResponse) Reset() {
	*x = CreateAPKResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bls12381sig_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAPKResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAPKResponse) ProtoMessage() {}

func (x *CreateAPKResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bls12381sig_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAPKResponse.ProtoReflect.Descriptor instead.
func (*CreateAPKResponse) Descriptor() ([]byte, []int) {
	return file_bls12381sig_proto_rawDescGZIP(), []int{7}
}

func (m *CreateAPKResponse) GetApk() isCreateAPKResponse_Apk {
	if m != nil {
		return m.Apk
	}
	return nil
}

func (x *CreateAPKResponse) GetAPK() []byte {
	if x, ok := x.GetApk().(*CreateAPKResponse_APK); ok {
		return x.APK
	}
	return nil
}

func (x *CreateAPKResponse) GetError() Error {
	if x, ok := x.GetApk().(*CreateAPKResponse_Error); ok {
		return x.Error
	}
	return Error_BLS_INVALID_BYTES
}

type isCreateAPKResponse_Apk interface {
	isCreateAPKResponse_Apk()
}

type CreateAPKResponse_APK struct {
	APK []byte `protobuf:"bytes,1,opt,name=APK,proto3,oneof"`
}

type CreateAPKResponse_Error struct {
	Error Error `protobuf:"varint,2,opt,name=Error,proto3,enum=signer.Error,oneof"`
}

func (*CreateAPKResponse_APK) isCreateAPKResponse_Apk() {}

func (*CreateAPKResponse_Error) isCreateAPKResponse_Apk() {}

type AggregatePKRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	APK  []byte   `protobuf:"bytes,1,opt,name=APK,proto3" json:"APK,omitempty"`
	Keys [][]byte `protobuf:"bytes,2,rep,name=Keys,proto3" json:"Keys,omitempty"`
}

func (x *AggregatePKRequest) Reset() {
	*x = AggregatePKRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bls12381sig_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregatePKRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatePKRequest) ProtoMessage() {}

func (x *AggregatePKRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bls12381sig_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatePKRequest.ProtoReflect.Descriptor instead.
func (*AggregatePKRequest) Descriptor() ([]byte, []int) {
	return file_bls12381sig_proto_rawDescGZIP(), []int{8}
}

func (x *AggregatePKRequest) GetAPK() []byte {
	if x != nil {
		return x.APK
	}
	return nil
}

func (x *AggregatePKRequest) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

type AggregateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Agg:
	//	*AggregateResponse_Code
	//	*AggregateResponse_Error
	Agg isAggregateResponse_Agg `protobuf_oneof:"agg"`
}

func (x *AggregateResponse) Reset() {
	*x = AggregateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bls12381sig_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateResponse) ProtoMessage() {}

func (x *AggregateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bls12381sig_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateResponse.ProtoReflect.Descriptor instead.
func (*AggregateResponse) Descriptor() ([]byte, []int) {
	return file_bls12381sig_proto_rawDescGZIP(), []int{9}
}

func (m *AggregateResponse) GetAgg() isAggregateResponse_Agg {
	if m != nil {
		return m.Agg
	}
	return nil
}

func (x *AggregateResponse) GetCode() []byte {
	if x, ok := x.GetAgg().(*AggregateResponse_Code); ok {
		return x.Code
	}
	return nil
}

func (x *AggregateResponse) GetError() Error {
	if x, ok := x.GetAgg().(*AggregateResponse_Error); ok {
		return x.Error
	}
	return Error_BLS_INVALID_BYTES
}

type isAggregateResponse_Agg interface {
	isAggregateResponse_Agg()
}

type AggregateResponse_Code struct {
	Code []byte `protobuf:"bytes,1,opt,name=Code,proto3,oneof"`
}

type AggregateResponse_Error struct {
	Error Error `protobuf:"varint,2,opt,name=Error,proto3,enum=signer.Error,oneof"`
}

func (*AggregateResponse_Code) isAggregateResponse_Agg() {}

func (*AggregateResponse_Error) isAggregateResponse_Agg() {}

type AggregateSigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature  []byte   `protobuf:"bytes,1,opt,name=Signature,proto3" json:"Signature,omitempty"`
	Signatures [][]byte `protobuf:"bytes,2,rep,name=Signatures,proto3" json:"Signatures,omitempty"`
}

func (x *AggregateSigRequest) Reset() {
	*x = AggregateSigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bls12381sig_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateSigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateSigRequest) ProtoMessage() {}

func (x *AggregateSigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bls12381sig_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateSigRequest.ProtoReflect.Descriptor instead.
func (*AggregateSigRequest) Descriptor() ([]byte, []int) {
	return file_bls12381sig_proto_rawDescGZIP(), []int{10}
}

func (x *AggregateSigRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *AggregateSigRequest) GetSignatures() [][]byte {
	if x != nil {
		return x.Signatures
	}
	return nil
}

var File_bls12381sig_proto protoreflect.FileDescriptor

var file_bls12381sig_proto_rawDesc = []byte{
	0x0a, 0x11, 0x62, 0x6c, 0x73, 0x31, 0x32, 0x33, 0x38, 0x31, 0x73, 0x69, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x22, 0x15, 0x0a, 0x13, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x52, 0x0a, 0x14, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x63, 0x0a, 0x0b, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5c, 0x0a, 0x0c, 0x53,
	0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x09, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00,
	0x52, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x42, 0x05, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x22, 0x59, 0x0a, 0x0d, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x70,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x41, 0x70, 0x6b, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x56, 0x0a, 0x0e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x25,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x05, 0x0a, 0x03, 0x76, 0x65, 0x72, 0x22, 0x30, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x50, 0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x55,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x50, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x03, 0x41, 0x50, 0x4b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x00, 0x52, 0x03, 0x41, 0x50, 0x4b, 0x12, 0x25, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x05,
	0x0a, 0x03, 0x61, 0x70, 0x6b, 0x22, 0x3a, 0x0a, 0x12, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x50, 0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x41,
	0x50, 0x4b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x41, 0x50, 0x4b, 0x12, 0x12, 0x0a,
	0x04, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x4b, 0x65, 0x79,
	0x73, 0x22, 0x57, 0x0a, 0x11, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x42, 0x05, 0x0a, 0x03, 0x61, 0x67, 0x67, 0x22, 0x53, 0x0a, 0x13, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x0a, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2a,
	0x48, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x4c, 0x53, 0x5f,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x42, 0x59, 0x54, 0x45, 0x53, 0x10, 0x00, 0x12,
	0x1b, 0x0a, 0x17, 0x42, 0x4c, 0x53, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x02, 0x32, 0x8f, 0x03, 0x0a, 0x06, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x73, 0x12, 0x1b, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x31, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x13, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x15, 0x2e, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x50, 0x4b, 0x12, 0x18, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x50, 0x4b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x50, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a,
	0x0b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x4b, 0x12, 0x1a, 0x2e, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50,
	0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0c, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x53, 0x69, 0x67, 0x12, 0x1b, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3e, 0x5a, 0x3c, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x75, 0x73, 0x6b, 0x2d, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x62, 0x6c, 0x73, 0x31, 0x32, 0x5f, 0x33, 0x38, 0x31,
	0x2d, 0x73, 0x69, 0x67, 0x6e, 0x2f, 0x62, 0x6c, 0x73, 0x31, 0x32, 0x5f, 0x33, 0x38, 0x31, 0x2d,
	0x73, 0x69, 0x67, 0x6e, 0x2d, 0x67, 0x6f, 0x2f, 0x62, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_bls12381sig_proto_rawDescOnce sync.Once
	file_bls12381sig_proto_rawDescData = file_bls12381sig_proto_rawDesc
)

func file_bls12381sig_proto_rawDescGZIP() []byte {
	file_bls12381sig_proto_rawDescOnce.Do(func() {
		file_bls12381sig_proto_rawDescData = protoimpl.X.CompressGZIP(file_bls12381sig_proto_rawDescData)
	})
	return file_bls12381sig_proto_rawDescData
}

var file_bls12381sig_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bls12381sig_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_bls12381sig_proto_goTypes = []interface{}{
	(Error)(0),                   // 0: signer.Error
	(*GenerateKeysRequest)(nil),  // 1: signer.GenerateKeysRequest
	(*GenerateKeysResponse)(nil), // 2: signer.GenerateKeysResponse
	(*SignRequest)(nil),          // 3: signer.SignRequest
	(*SignResponse)(nil),         // 4: signer.SignResponse
	(*VerifyRequest)(nil),        // 5: signer.VerifyRequest
	(*VerifyResponse)(nil),       // 6: signer.VerifyResponse
	(*CreateAPKRequest)(nil),     // 7: signer.CreateAPKRequest
	(*CreateAPKResponse)(nil),    // 8: signer.CreateAPKResponse
	(*AggregatePKRequest)(nil),   // 9: signer.AggregatePKRequest
	(*AggregateResponse)(nil),    // 10: signer.AggregateResponse
	(*AggregateSigRequest)(nil),  // 11: signer.AggregateSigRequest
}
var file_bls12381sig_proto_depIdxs = []int32{
	0,  // 0: signer.SignResponse.Error:type_name -> signer.Error
	0,  // 1: signer.VerifyResponse.Error:type_name -> signer.Error
	0,  // 2: signer.CreateAPKResponse.Error:type_name -> signer.Error
	0,  // 3: signer.AggregateResponse.Error:type_name -> signer.Error
	1,  // 4: signer.Signer.GenerateKeys:input_type -> signer.GenerateKeysRequest
	3,  // 5: signer.Signer.Sign:input_type -> signer.SignRequest
	5,  // 6: signer.Signer.Verify:input_type -> signer.VerifyRequest
	7,  // 7: signer.Signer.CreateAPK:input_type -> signer.CreateAPKRequest
	9,  // 8: signer.Signer.AggregatePK:input_type -> signer.AggregatePKRequest
	11, // 9: signer.Signer.AggregateSig:input_type -> signer.AggregateSigRequest
	2,  // 10: signer.Signer.GenerateKeys:output_type -> signer.GenerateKeysResponse
	4,  // 11: signer.Signer.Sign:output_type -> signer.SignResponse
	6,  // 12: signer.Signer.Verify:output_type -> signer.VerifyResponse
	8,  // 13: signer.Signer.CreateAPK:output_type -> signer.CreateAPKResponse
	10, // 14: signer.Signer.AggregatePK:output_type -> signer.AggregateResponse
	10, // 15: signer.Signer.AggregateSig:output_type -> signer.AggregateResponse
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_bls12381sig_proto_init() }
func file_bls12381sig_proto_init() {
	if File_bls12381sig_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bls12381sig_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bls12381sig_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bls12381sig_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bls12381sig_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bls12381sig_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bls12381sig_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bls12381sig_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAPKRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bls12381sig_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAPKResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bls12381sig_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregatePKRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bls12381sig_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bls12381sig_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateSigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bls12381sig_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*SignResponse_Signature)(nil),
		(*SignResponse_Error)(nil),
	}
	file_bls12381sig_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*VerifyResponse_Valid)(nil),
		(*VerifyResponse_Error)(nil),
	}
	file_bls12381sig_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*CreateAPKResponse_APK)(nil),
		(*CreateAPKResponse_Error)(nil),
	}
	file_bls12381sig_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*AggregateResponse_Code)(nil),
		(*AggregateResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bls12381sig_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bls12381sig_proto_goTypes,
		DependencyIndexes: file_bls12381sig_proto_depIdxs,
		EnumInfos:         file_bls12381sig_proto_enumTypes,
		MessageInfos:      file_bls12381sig_proto_msgTypes,
	}.Build()
	File_bls12381sig_proto = out.File
	file_bls12381sig_proto_rawDesc = nil
	file_bls12381sig_proto_goTypes = nil
	file_bls12381sig_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SignerClient is the client API for Signer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SignerClient interface {
	GenerateKeys(ctx context.Context, in *GenerateKeysRequest, opts ...grpc.CallOption) (*GenerateKeysResponse, error)
	Sign(ctx context.Context, in *SignRequest, opts ...grpc.CallOption) (*SignResponse, error)
	Verify(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyResponse, error)
	CreateAPK(ctx context.Context, in *CreateAPKRequest, opts ...grpc.CallOption) (*CreateAPKResponse, error)
	AggregatePK(ctx context.Context, in *AggregatePKRequest, opts ...grpc.CallOption) (*AggregateResponse, error)
	AggregateSig(ctx context.Context, in *AggregateSigRequest, opts ...grpc.CallOption) (*AggregateResponse, error)
}

type signerClient struct {
	cc grpc.ClientConnInterface
}

func NewSignerClient(cc grpc.ClientConnInterface) SignerClient {
	return &signerClient{cc}
}

func (c *signerClient) GenerateKeys(ctx context.Context, in *GenerateKeysRequest, opts ...grpc.CallOption) (*GenerateKeysResponse, error) {
	out := new(GenerateKeysResponse)
	err := c.cc.Invoke(ctx, "/signer.Signer/GenerateKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signerClient) Sign(ctx context.Context, in *SignRequest, opts ...grpc.CallOption) (*SignResponse, error) {
	out := new(SignResponse)
	err := c.cc.Invoke(ctx, "/signer.Signer/Sign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signerClient) Verify(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyResponse, error) {
	out := new(VerifyResponse)
	err := c.cc.Invoke(ctx, "/signer.Signer/Verify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signerClient) CreateAPK(ctx context.Context, in *CreateAPKRequest, opts ...grpc.CallOption) (*CreateAPKResponse, error) {
	out := new(CreateAPKResponse)
	err := c.cc.Invoke(ctx, "/signer.Signer/CreateAPK", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signerClient) AggregatePK(ctx context.Context, in *AggregatePKRequest, opts ...grpc.CallOption) (*AggregateResponse, error) {
	out := new(AggregateResponse)
	err := c.cc.Invoke(ctx, "/signer.Signer/AggregatePK", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signerClient) AggregateSig(ctx context.Context, in *AggregateSigRequest, opts ...grpc.CallOption) (*AggregateResponse, error) {
	out := new(AggregateResponse)
	err := c.cc.Invoke(ctx, "/signer.Signer/AggregateSig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SignerServer is the server API for Signer service.
type SignerServer interface {
	GenerateKeys(context.Context, *GenerateKeysRequest) (*GenerateKeysResponse, error)
	Sign(context.Context, *SignRequest) (*SignResponse, error)
	Verify(context.Context, *VerifyRequest) (*VerifyResponse, error)
	CreateAPK(context.Context, *CreateAPKRequest) (*CreateAPKResponse, error)
	AggregatePK(context.Context, *AggregatePKRequest) (*AggregateResponse, error)
	AggregateSig(context.Context, *AggregateSigRequest) (*AggregateResponse, error)
}

// UnimplementedSignerServer can be embedded to have forward compatible implementations.
type UnimplementedSignerServer struct {
}

func (*UnimplementedSignerServer) GenerateKeys(context.Context, *GenerateKeysRequest) (*GenerateKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateKeys not implemented")
}
func (*UnimplementedSignerServer) Sign(context.Context, *SignRequest) (*SignResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sign not implemented")
}
func (*UnimplementedSignerServer) Verify(context.Context, *VerifyRequest) (*VerifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Verify not implemented")
}
func (*UnimplementedSignerServer) CreateAPK(context.Context, *CreateAPKRequest) (*CreateAPKResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAPK not implemented")
}
func (*UnimplementedSignerServer) AggregatePK(context.Context, *AggregatePKRequest) (*AggregateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AggregatePK not implemented")
}
func (*UnimplementedSignerServer) AggregateSig(context.Context, *AggregateSigRequest) (*AggregateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AggregateSig not implemented")
}

func RegisterSignerServer(s *grpc.Server, srv SignerServer) {
	s.RegisterService(&_Signer_serviceDesc, srv)
}

func _Signer_GenerateKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignerServer).GenerateKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/signer.Signer/GenerateKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignerServer).GenerateKeys(ctx, req.(*GenerateKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Signer_Sign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignerServer).Sign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/signer.Signer/Sign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignerServer).Sign(ctx, req.(*SignRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Signer_Verify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignerServer).Verify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/signer.Signer/Verify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignerServer).Verify(ctx, req.(*VerifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Signer_CreateAPK_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAPKRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignerServer).CreateAPK(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/signer.Signer/CreateAPK",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignerServer).CreateAPK(ctx, req.(*CreateAPKRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Signer_AggregatePK_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AggregatePKRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignerServer).AggregatePK(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/signer.Signer/AggregatePK",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignerServer).AggregatePK(ctx, req.(*AggregatePKRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Signer_AggregateSig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AggregateSigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignerServer).AggregateSig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/signer.Signer/AggregateSig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignerServer).AggregateSig(ctx, req.(*AggregateSigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Signer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "signer.Signer",
	HandlerType: (*SignerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GenerateKeys",
			Handler:    _Signer_GenerateKeys_Handler,
		},
		{
			MethodName: "Sign",
			Handler:    _Signer_Sign_Handler,
		},
		{
			MethodName: "Verify",
			Handler:    _Signer_Verify_Handler,
		},
		{
			MethodName: "CreateAPK",
			Handler:    _Signer_CreateAPK_Handler,
		},
		{
			MethodName: "AggregatePK",
			Handler:    _Signer_AggregatePK_Handler,
		},
		{
			MethodName: "AggregateSig",
			Handler:    _Signer_AggregateSig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bls12381sig.proto",
}
